import textwrap

from nbformat import NotebookNode
from nbformat.v4 import new_markdown_cell, new_code_cell, new_notebook

from ewatercycle_experiment_launcher.auth import requires_auth
from ewatercycle_experiment_launcher.generate import PY3_META
from ewatercycle_experiment_launcher.process import process_notebook


@requires_auth
def post(request):
    """Generate notebook and launch it"""
    return process_notebook(request['notebook'], notebook(request['setup']))


def notebook(setup) -> NotebookNode:
    """Generates a Jupyter notebook"""
    welcome = textwrap.dedent("""
    # Welcome

    This notebook was generated by the eWaterCycle experiment launcher.
    
    """)
    cells = [
        new_markdown_cell(welcome),
        new_code_cell('import pandas as pd'),
        new_code_cell('from hymuse.models import {0}'.format(setup['model'])),
        new_code_cell(textwrap.dedent("""
            # Construct model
            model = {0}()
            # Setup model based on region
            model.region({0})
            """.format(setup['model'], setup['region'])
        )),
        new_code_cell(textwrap.dedent("""
            # Store outlet of each step
            outlets = []
            # Run model in daily steps
            steps = pd.date_range(start='{0}', end='{1}', freq='D')
            for step in steps:
              model.evolve_model(step)
              outlets.append(model.outlet())
            """.format(setup['period']['start'], setup['period']['end'])
        )),
        new_code_cell(textwrap.dedent("""
            import matplotlib.pyplot as plt
            plt.ion()
            """
        )),
        new_code_cell(textwrap.dedent("""
            # Plot outlet for each model step
            plt.plot(steps, outlets)
        """
        )),
    ]
    return new_notebook(cells=cells, metadata=PY3_META)
